version: "3.8"

services:
  postgres:
    build:
      context: .
      dockerfile: ./services/postgres/Dockerfile
    image: postgres-pgvector-mecab
    env_file:
      - .env.local
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    env_file:
      - .env.local
    networks:
      - net
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 5s
  frontend:
    build:
      context: .
      dockerfile: ./services/frontend/Dockerfile.local
    image: frontend:latest
    env_file:
      - .env.local
    volumes:
      - ./apps/frontend:/app/apps/frontend

    networks:
      - net
    ports:
      - "5173:5173" # Vite dev server

  backend:
    build:
      context: .
      dockerfile: ./services/backend/Dockerfile.local
    image: backend:latest
    env_file:
      - .env.local
    volumes:
      - ./apps/backend:/app/apps/backend
      - ./libs:/app/libs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - net
    ports:
      - "3000:3000" # 백엔드 API 포트

  scheduler:
    build:
      context: .
      dockerfile: ./services/scheduler/Dockerfile.local
    image: scheduler:latest
    env_file:
      - .env.local
    volumes:
      - ./apps/scheduler:/app/apps/scheduler
      - ./libs:/app/libs

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - net
    ports:
      - "3001:3000" # 백엔드 API 포트

  websocket:
    build:
      context: .
      dockerfile: ./services/websocket/Dockerfile.local
    image: websocket:latest
    env_file:
      - .env.local
    volumes:
      - ./apps/websocket:/app/apps/websocket
      - ./libs:/app/libs

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - net
    ports:
      - "4242:4242" # WebSocket 포트

  nginx:
    build:
      context: .
      dockerfile: ./services/nginx/Dockerfile.local
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - websocket
    networks:
      - net
    volumes:
      - type: bind
        source: ./services/nginx/ssl
        target: /etc/nginx/ssl
        bind:
          create_host_path: true
          propagation: rprivate
      - ./services/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf

networks:
  net:

volumes:
  postgres_data:
