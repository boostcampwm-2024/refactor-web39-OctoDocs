name: OctoDocs CI Pipeline

on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - develop

jobs:
  setup-backend:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-backend-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 백엔드 의존성 캐시 설정
      - name: Cache Yarn dependencies for backend
        id: cache-backend-deps
        uses: actions/cache@v3
        with:
          path: apps/backend/node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles('apps/backend/yarn.lock') }}

      # 백엔드 의존성 설치
      - name: Install backend dependencies
        if: steps.cache-backend-deps.outputs.cache-hit != 'true'
        working-directory: ./apps/backend
        run: yarn install

  setup-frontend:
    runs-on: ubuntu-latest
    outputs:
      cache-key: ${{ steps.cache-frontend-deps.outputs.cache-hit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 프론트엔드 의존성 캐시 설정
      - name: Cache Yarn dependencies for frontend
        id: cache-frontend-deps
        uses: actions/cache@v3
        with:
          path: apps/frontend/node_modules
          key: ${{ runner.os }}-frontend-yarn-${{ hashFiles('apps/frontend/yarn.lock') }}

      # 프론트엔드 의존성 설치
      - name: Install frontend dependencies
        if: steps.cache-frontend-deps.outputs.cache-hit != 'true'
        working-directory: ./apps/frontend
        run: yarn install

  backend-lint:
    runs-on: ubuntu-latest
    needs: setup-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 백엔드 의존성 캐시 복원
      - name: Restore Yarn dependencies for backend
        uses: actions/cache@v3
        with:
          path: apps/backend/node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles('apps/backend/yarn.lock') }}

      # 백엔드 린트 실행
      - name: Run backend lint
        working-directory: ./apps/backend
        run: yarn lint
        continue-on-error: true

      # 백엔드 린트 경고 포스트
      - name: Post backend lint warning if any
        if: failure()
        run: echo "⚠️ 백엔드 lint 실행 도중 경고가 발생했습니다. 확인해주세요."

  frontend-lint:
    runs-on: ubuntu-latest
    needs: setup-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 프론트엔드 의존성 캐시 복원
      - name: Restore Yarn dependencies for frontend
        uses: actions/cache@v3
        with:
          path: apps/frontend/node_modules
          key: ${{ runner.os }}-frontend-yarn-${{ hashFiles('apps/frontend/yarn.lock') }}

      # 프론트엔드 린트 실행
      - name: Run frontend lint
        working-directory: ./apps/frontend
        run: yarn lint
        continue-on-error: true

      # 프론트엔드 린트 경고 포스트
      - name: Post frontend lint warning if any
        if: failure()
        run: echo "⚠️ 프론트엔드 lint 실행 도중 경고가 발생했습니다. 확인해주세요."

  backend-build:
    runs-on: ubuntu-latest
    needs: setup-backend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"
      # 루트 의존성 캐시 설정
      - name: Cache Yarn dependencies for root
        id: cache-root-deps
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-root-yarn-${{ hashFiles('yarn.lock') }}

      # 루트 의존성 설치
      - name: Install root dependencies
        if: steps.cache-root-deps.outputs.cache-hit != 'true'
        run: yarn install
        
      # 백엔드 의존성 캐시 복원
      - name: Restore Yarn dependencies for backend
        uses: actions/cache@v3
        with:
          path: apps/backend/node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles('apps/backend/yarn.lock') }}

      # 백엔드 빌드 실행
      - name: Run backend build
        working-directory: ./apps/backend
        run: yarn build

  frontend-build:
    runs-on: ubuntu-latest
    needs: setup-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 프론트엔드 의존성 캐시 복원
      - name: Restore Yarn dependencies for frontend
        uses: actions/cache@v3
        with:
          path: apps/frontend/node_modules
          key: ${{ runner.os }}-frontend-yarn-${{ hashFiles('apps/frontend/yarn.lock') }}

      # 프론트엔드 빌드 실행
      - name: Run frontend build
        working-directory: ./apps/frontend
        run: yarn build

  backend-test:
    runs-on: ubuntu-latest
    needs: [setup-backend, backend-build]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "23"

      # 백엔드 의존성 캐시 복원
      - name: Restore Yarn dependencies for backend
        uses: actions/cache@v3
        with:
          path: apps/backend/node_modules
          key: ${{ runner.os }}-backend-yarn-${{ hashFiles('apps/backend/yarn.lock') }}

      # 백엔드 테스트 실행
      - name: Run backend tests
        working-directory: ./apps/backend
        run: yarn test
