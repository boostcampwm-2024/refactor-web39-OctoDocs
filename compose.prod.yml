services:
    nginx-proxy:
        image: nginx:alpine
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./services/nginx/conf.d/prod_nginx.conf:/etc/nginx/conf.d/default.conf
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
            - ./apps/frontend/dist:/usr/share/nginx/html:ro
        networks:
            - frontend

    certbot:
        image: certbot/certbot
        volumes:
            - ./data/certbot/conf:/etc/letsencrypt
            - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

    backend:
        build:
            context: .
            dockerfile: ./services/backend/Dockerfile.prod
        image: backend:latest
        env_file:
            - .env.prod
        volumes:
            - .env.prod:/app/.env
        expose:
            - "3000"
            - "1234"
        networks:
            - frontend
            - backend

    redis:
        image: redis:latest
        environment:
            REDIS_HOST: ${REDIS_HOST}
            REDIS_PORT: ${REDIS_PORT}
        networks:
            - backend

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge

volumes:
    nginx_certs:
